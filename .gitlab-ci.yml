image: node:18.17.0-alpine3.17

stages:
  - build
  - deploy

build:
  stage: build
  before_script:
    ### enable debug mode
    #    - set -xeuo pipefail
    - cp ${ENV_FILE} .env
  script:
    - npm install
    - npm run build
  artifacts:
    paths:
      - dist/

dev-2-deploy:
  stage: deploy
  needs:
    - job: build
      artifacts: true
  when: manual
  environment: dev-2
  before_script:
    ### enable debug mode
    #    - set -xeuo pipefail
    ### send message to telegram
    - apk add --update curl bash
    - curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=üîÑ$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH is deploying to dev-2"
    ### Set .env file
    - cp ${ENV_FILE} .env
    ### install ssh client and copy private ssh key
    - apk add --update openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan 45.10.53.84 >> ~/.ssh/known_hosts
    - chmod 700 ~/.ssh
  script:
#    - npm install
#    - npm run build
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r dist/ $SSH_USER@$SSH_HOST:/www/dev-2-asanner
  after_script:
    - if [ "$CI_JOB_STATUS" == "success" ]; then
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚úÖ$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH has been deployed to dev-2";
      else
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚ùå$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH deploy to dev-2 failed\n$CI_PIPELINE_URL";
      fi

deploy-dev:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  before_script:
    ### enable debug mode
#    - set -xeuo pipefail
    ### send message to telegram
    - apk add --update curl bash
    - curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=üîÑ$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH is deploying to dev"
    ### Set .env file
    - cp ${ENV_FILE} .env
    ### install ssh client and copy private ssh key
    - apk add --update openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan 45.10.53.84 >> ~/.ssh/known_hosts
    - chmod 700 ~/.ssh
  script:
    - npm install
    - npm run build
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r dist/ $SSH_USER@$SSH_HOST:/www/dev-asanner
  after_script:
    - if [ "$CI_JOB_STATUS" == "success" ]; then
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚úÖ$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH has been deployed to dev";
      else
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚ùå$CI_PROJECT_NAME - branch $CI_COMMIT_BRANCH deploy to dev failed\n$CI_PIPELINE_URL";
      fi