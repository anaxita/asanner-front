image: node:18.17.0-alpine3.17

# TODO enable if you add another stage
#cache:
#  paths:
#    - node_modules/

stages:
  - build
  - deploy

build:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH != "dev"' # because dev branch is checked in deploy stage
  before_script:
    ### enable debug mode
    #    - set -xeuo pipefail
    - cp ${ENV_FILE} .env
  script:
    - npm install
    - npm run build

deploy-dev:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
  before_script:
    ### enable debug mode
#    - set -xeuo pipefail
    ### send message to telegram
    - apk add --update curl bash
    - curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=üîÑ$CI_PROJECT_NAME deploying to $CI_COMMIT_BRANCH"
    ### Set .env file
    - cp ${ENV_FILE} .env
    ### install ssh client and copy private ssh key
    - apk add --update openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - touch ~/.ssh/known_hosts
    - ssh-keyscan 45.10.53.84 >> ~/.ssh/known_hosts
    - chmod 700 ~/.ssh
  script:
    - npm install
    - npm run build
    - scp -P $SSH_PORT -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r dist/ $SSH_USER@$SSH_HOST:/www/dev-asanner
  after_script:
    - if [ "$CI_JOB_STATUS" == "success" ]; then
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚úÖ$CI_PROJECT_NAME - deploying to $CI_COMMIT_BRANCH finished with status $CI_JOB_STATUS";
      else
      curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d "chat_id=$CHAT_ID" -d "text=‚ùå$CI_PROJECT_NAME - deploying to $CI_COMMIT_BRANCH finished with status $CI_JOB_STATUS\n$CI_PIPELINE_URL";
      fi